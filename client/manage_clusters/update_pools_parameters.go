// Code generated by go-swagger; DO NOT EDIT.

package manage_clusters

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/matyix/oracle-oke-client/models"
)

// NewUpdatePoolsParams creates a new UpdatePoolsParams object
// with the default values initialized.
func NewUpdatePoolsParams() *UpdatePoolsParams {
	var ()
	return &UpdatePoolsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdatePoolsParamsWithTimeout creates a new UpdatePoolsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdatePoolsParamsWithTimeout(timeout time.Duration) *UpdatePoolsParams {
	var ()
	return &UpdatePoolsParams{

		timeout: timeout,
	}
}

// NewUpdatePoolsParamsWithContext creates a new UpdatePoolsParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdatePoolsParamsWithContext(ctx context.Context) *UpdatePoolsParams {
	var ()
	return &UpdatePoolsParams{

		Context: ctx,
	}
}

// NewUpdatePoolsParamsWithHTTPClient creates a new UpdatePoolsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdatePoolsParamsWithHTTPClient(client *http.Client) *UpdatePoolsParams {
	var ()
	return &UpdatePoolsParams{
		HTTPClient: client,
	}
}

/*UpdatePoolsParams contains all the parameters to send to the API endpoint
for the update pools operation typically these are written to a http.Request
*/
type UpdatePoolsParams struct {

	/*Body
	  Body parameters.

	*/
	Body *models.ClustersapiUpdatePoolsRequest
	/*ClusterID
	  Cluster ID.

	Example: a5a19a4776

	*/
	ClusterID string
	/*OwnerID
	  Wercker organization ID.

	Example: 59bbf8affb1beb01009cae7a

	*/
	OwnerID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update pools params
func (o *UpdatePoolsParams) WithTimeout(timeout time.Duration) *UpdatePoolsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update pools params
func (o *UpdatePoolsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update pools params
func (o *UpdatePoolsParams) WithContext(ctx context.Context) *UpdatePoolsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update pools params
func (o *UpdatePoolsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update pools params
func (o *UpdatePoolsParams) WithHTTPClient(client *http.Client) *UpdatePoolsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update pools params
func (o *UpdatePoolsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update pools params
func (o *UpdatePoolsParams) WithBody(body *models.ClustersapiUpdatePoolsRequest) *UpdatePoolsParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update pools params
func (o *UpdatePoolsParams) SetBody(body *models.ClustersapiUpdatePoolsRequest) {
	o.Body = body
}

// WithClusterID adds the clusterID to the update pools params
func (o *UpdatePoolsParams) WithClusterID(clusterID string) *UpdatePoolsParams {
	o.SetClusterID(clusterID)
	return o
}

// SetClusterID adds the clusterId to the update pools params
func (o *UpdatePoolsParams) SetClusterID(clusterID string) {
	o.ClusterID = clusterID
}

// WithOwnerID adds the ownerID to the update pools params
func (o *UpdatePoolsParams) WithOwnerID(ownerID string) *UpdatePoolsParams {
	o.SetOwnerID(ownerID)
	return o
}

// SetOwnerID adds the ownerId to the update pools params
func (o *UpdatePoolsParams) SetOwnerID(ownerID string) {
	o.OwnerID = ownerID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdatePoolsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param clusterId
	if err := r.SetPathParam("clusterId", o.ClusterID); err != nil {
		return err
	}

	// path param ownerId
	if err := r.SetPathParam("ownerId", o.OwnerID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
