// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// ClustersapiGetWorkItemResponse Work item details.
// swagger:model clustersapiGetWorkItemResponse
type ClustersapiGetWorkItemResponse struct {

	// activity
	Activity ClustersapiGetWorkItemResponseActivity `json:"activity"`

	// Parameter description.
	ClosedAt string `json:"closedAt,omitempty"`

	// Cluster ID.
	ClusterID string `json:"clusterId,omitempty"`

	// Parameter description.
	CreatedAt string `json:"createdAt,omitempty"`

	// Work item ID.
	ID string `json:"id,omitempty"`

	// Parameter description.
	LockedUntil string `json:"lockedUntil,omitempty"`

	// Wercker organization ID.
	ResourceOwnerID string `json:"resourceOwnerId,omitempty"`

	// Parameter description.
	ResponseError string `json:"responseError,omitempty"`

	// Parameter description.
	StartedAt string `json:"startedAt,omitempty"`

	// Parameter description.
	Status int32 `json:"status,omitempty"`

	// Work item status.
	StatusString string `json:"statusString,omitempty"`

	// Parameter description.
	TenantID string `json:"tenantId,omitempty"`

	// Parameter description.
	TmID string `json:"tmId,omitempty"`

	// Parameter description.
	Type int32 `json:"type,omitempty"`
}

// Validate validates this clustersapi get work item response
func (m *ClustersapiGetWorkItemResponse) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// MarshalBinary interface implementation
func (m *ClustersapiGetWorkItemResponse) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ClustersapiGetWorkItemResponse) UnmarshalBinary(b []byte) error {
	var res ClustersapiGetWorkItemResponse
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
